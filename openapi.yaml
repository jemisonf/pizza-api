swagger: "2.0"
info:
  description: "An API for pizza recipes."
  title: "Pizza API"
  version: "1.0.0"
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: pizza
    description: A pizza recipe
  - name: dough
    description: A dough recipe
  - name: ingredient
    description: An ingredient
schemes:
  - https
host: api.oregonstate.edu
basePath: /v1
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/express-api-skeleton
produces:
  - application/json
consumes:
  - application/json
security:
  - OAuth2:
      - full
paths:
  /pizzas:
    get:
      description: Get all pizzas
      tags:
        - pizza
      parameters:
        - in: query
          name: filter[name]
          description: Search pizzas by name
          required: false
          type: string
        - in: query
          name: filter[ovenTemp]
          description: Search pizzas by bake temperature (in degrees Fahrenheit)
          required: false
          type: integer
        - in: query
          name: filter[bakeTime]
          description: Search pizzas by baking time (in minutes)
          type: integer
        - in: query
          name: filter[ingredientsList]
          description: Search for pizzas with all the ingredients specified by this list of ingredient IDs
          type: array
          items:
            type: string
        - in: query
          name: filter[doughId]
          description: Search for pizzas with the dough matching this dough ID
          type: string
      responses:
        "200":
          description: A list of pizzas
          schema:
            $ref: "#/definitions/PizzasResults"
        "400":
          $ref: "#/responses/400"
        "500":
          $ref: "#/responses/500"
    post:
      description: Create a new pizza recipe
      tags:
        - pizza
      parameters:
        - in: body
          name: attributes
          description: attributes to assign to the new pizza
          required: true
          schema:
            $ref: "#/definitions/PizzaPostBody"
      responses:
        "201":
          description: The newly created pizza recipe
          schema:
            $ref: "#/definitions/PizzaResult"
        "400":
          $ref: "#/responses/400"
        "409":
          $ref: "#/responses/409"
        "500":
          $ref: "#/responses/500"
  /pizzas/{pizzaId}:
    get:
      description: Get a pizza with Id pizzaId
      tags:
        - pizza
      parameters:
        - $ref: "#/parameters/pizzaId"
      responses:
        "200":
          description: A single pizza
          schema:
            $ref: "#/definitions/PizzaResult"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
    patch:
      description: Update a pizza recipe
      tags:
        - pizza
      parameters:
        - $ref: "#/parameters/pizzaId"
        - in: body
          name: attributes
          description: attributes of the pizza to be updated
          schema:
            $ref: "#/definitions/PizzaPostBody"
      responses:
        "200":
          description: The updated pizza recipe
          schema:
            $ref: "#/definitions/PizzaResult"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "409":
          $ref: "#/responses/409"
        "500":
          $ref: "#/responses/500"
    delete:
      description: Delete a pizza recipe
      tags:
        - pizza
      parameters:
        - $ref: "#/parameters/pizzaId"
      responses:
        "204":
          description: successfully deleted the pizza
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
  /pizzas/{pizzaId}/relationships/dough:
    get:
      description: Get the dough recipe for a pizza
      tags:
        - pizza
        - dough
      parameters:
        - $ref: "#/parameters/pizzaId"
      responses:
        "200":
          description: A dough recipe resource reference
          schema:
            $ref: "#/definitions/RelationshipResourceResponse"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
    patch:
      description: update the dough relationship for the pizza. Pass `null` as the data to remove.
      tags:
        - pizza
        - dough
      parameters:
        - $ref: "#/parameters/pizzaId"
      responses:
        "200":
          description: Successfully updated the dough resource reference
          schema:
            $ref: "#/definitions/RelationshipResourceResponse"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
  /pizzas/{pizzaId}/relationships/ingredients:
    get:
      description: Get ingredients for a pizza
      tags:
        - pizza
        - ingredient
      parameters:
        - $ref: "#/parameters/pizzaId"
      responses:
        "200":
          description: A list of ingredient resource references
          schema:
            $ref: "#/definitions/RelationshipResourceList"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
    patch:
      description: update *all* ingredients for a pizza.
      tags:
        - pizza
        - ingredient
      parameters:
        - $ref: "#/parameters/pizzaId"
      responses:
        "200":
          description: Successfully updated list of ingredients
          schema:
            $ref: "#/definitions/RelationshipResourceList"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
  /doughs:
    get:
      description: Get all dough recipes
      tags:
        - dough
      parameters:
        - in: query
          name: filter[name]
          required: false
          type: string
          description: Search doughs by name
        - in: query
          name: filter[gramsFlour]
          required: false
          type: integer
          description: Search doughs by grams flour used
        - in: query
          name: filter[gramsWater]
          required: false
          type: integer
          description: Search doughs by grams water used
        - in: query
          name: filter[gramsSugar]
          required: false
          description: Search doughs by grams sugar used
          type: integer
        - in: query
          name: filter[gramsOliveOil]
          required: false
          description: Search doughs by grams olive oil used
          type: integer
        - in: query
          name: filter[gramsYeast]
          required: false
          type: integer
          description: Search doughs by grams yeast used
        - in: query
          name: filter[gramsSalt]
          required: false
          type: integer
          description: Search doughs by grams salt used
        - in: query
          name: filter[bulkFermentTime]
          required: false
          type: integer
          description: Search doughs by bulk ferment time
        - in: query
          name: filter[proofTime]
          required: false
          type: integer
          description: Search doughs by proof time
        - in: query
          name: filter[waterTemp]
          required: false
          type: integer
          description: Search doughs by water temperature at mix time
        - in: query
          name: filter[flourType]
          required: false
          description: Search doughs by flour type
          type: string
      responses:
        "200":
          description: A list of dough recipes
          schema:
            $ref: "#/definitions/DoughsResult"
        "400":
          $ref: "#/responses/400"
        "500":
          $ref: "#/responses/500"
    post:
      description: Create a dough recipe
      tags:
        - dough
      parameters:
        - in: body
          name: attributes
          description: attributes of the new dough recipe
          schema:
            $ref: "#/definitions/DoughPostBody"
      responses:
        "201":
          description: The created dough recipe
          schema:
            $ref: "#/definitions/DoughResult"
        "400":
          $ref: "#/responses/400"
        "409":
          $ref: "#/responses/409"
        "500":
          $ref: "#/responses/500"
  /doughs/{doughId}:
    get:
      description: Get the dough recipe with ID doughId
      tags:
        - dough
      parameters:
        - in: path
          name: doughId
          required: true
          type: string
          description: ID of the dough recipe to retrieve
      responses:
        "200":
          description: A single dough recipe
          schema:
            $ref: "#/definitions/DoughResult"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
    patch:
      description: Update a dough recipe
      tags:
        - dough
      parameters:
        - in: path
          name: doughId
          required: true
          type: string
          description: ID of the dough recipe to retrieve
        - in: body
          name: attributes
          description: attributes of the dough recipe to be updated
          schema:
            $ref: "#/definitions/DoughPostBody"
      responses:
        "200":
          description: The updated dough recipe
          schema:
            $ref: "#/definitions/DoughResult"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "409":
          $ref: "#/responses/409"
        "500":
          $ref: "#/responses/500"
  /doughs/{doughId}/relationships/pizza:
    get:
      description: get the pizzas made with a specific dough
      tags:
        - dough
        - pizza
      parameters:
        - in: path
          name: doughId
          required: true
          type: string
      responses:
        "200":
          description: a list of relationship resources with the pizza type
          schema:
            $ref: "#/definitions/RelationshipResourceList"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"

  /ingredients:
    get:
      description: Get the a list of all ingredients
      tags:
        - ingredient
      parameters:
        - in: query
          name: filter[name]
          description: Search ingredients by name
          required: false
          type: string
        - in: query
          name: filter[ingredientType]
          description: Search ingredients by type
          required: false
          type: string
      responses:
        "200":
          description: A list of ingredients
          schema:
            $ref: "#/definitions/IngredientsResult"
    post:
      description: Create a new ingredient
      tags:
        - ingredient
      parameters:
        - in: body
          name: attributes
          description: Attributes to assign to the new ingredient
          schema:
            $ref: "#/definitions/IngredientAttributes"
      responses:
        "201":
          description: The newly created ingredient
          schema:
            $ref: "#/definitions/IngredientResult"
        "400":
          $ref: "#/responses/400"
        "409":
          $ref: "#/responses/409"
        "500":
          $ref: "#/responses/500"
  /ingredients/{ingredientId}:
    get:
      description: Get the ingredient with ID ingredientId
      tags:
        - ingredient
      parameters:
        - in: path
          name: ingredientId
          required: true
          type: string
          description: ID of the ingredient to retrieve
      responses:
        "200":
          description: A single ingredient
          schema:
            $ref: "#/definitions/IngredientResult"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
    patch:
      description: Update the ingredient with ID ingredientId
      tags:
        - ingredient
      parameters:
        - in: path
          name: ingredientId
          required: true
          type: string
          description: ID of the ingredient to retrieve
        - in: body
          name: attributes
          description: attributes to be updated
          schema:
            $ref: "#/definitions/IngredientResource"
      responses:
        "200":
          description: The updated ingredient
          schema:
            $ref: "#/definitions/IngredientResult"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "409":
          $ref: "#/responses/409"
        "500":
          $ref: "#/responses/500"
  /ingredients/{ingredientId}/relationships/pizza:
    get:
      description: get the pizzas made with a specific ingredient
      tags:
        - ingredient
        - pizza
      parameters:
        - in: path
          name: ingredientId
          required: true
          type: string
      responses:
        "200":
          description: a list of relationship resources with the pizza type
          schema:
            $ref: "#/definitions/RelationshipResourceList"
        "400":
          $ref: "#/responses/400"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: application
    tokenUrl: https://api.oregonstate.edu/oauth2/token
    scopes:
      full: Full access to the API
definitions:
  PizzasResults:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/PizzaResource"
  PizzaResult:
    properties:
      data:
        $ref: "#/definitions/PizzaResource"

  PizzaResource:
    properties:
      type: &pizzaType
        type: string
        description: the type of the resource (pizza)
        example: pizza
      id: &pizzaId
        type: string
        description: a unique ID of a pizza
        example: abc123
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        $ref: "#/definitions/PizzaAttributes"
      relationships: &pizzaRelationships
        properties:
          dough:
            properties:
              data:
                $ref: "#/definitions/RelationshipResource"
          ingredients:
            properties:
              links:
                $ref: "#/definitions/SelfLink"
              data:
                type: array
                description: a list of relationship resources with the ingredient type
                items:
                  $ref: "#/definitions/RelationshipResource"
      included: &pizzaIncluded
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/DoughRecipe"
            - $ref: "#/definitions/IngredientResource"
  PizzaPostBody:
    properties:
      type: *pizzaType
      id: *pizzaId
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        $ref: "#/definitions/PizzaAttributes"
      relationships: *pizzaRelationships
  PizzaAttributes:
    type: object
    properties:
      name:
        type: string
        description: the name of the pizza
        example: My Favorite Margherita
      ovenTemp:
        type: integer
        description: the temperature to bake the pizza at, in Fahrenheit
        example: 500
      bakeTime:
        type: integer
        description: the time in minutes to bake the pizza for
        example: 10
      specialInstructions:
        type: string
        description: any special instructions for baking the pizza
        example: place the basil on after baking
  IngredientsResult:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/IngredientResource"
  IngredientResult:
    properties:
      data:
        $ref: "#/definitions/IngredientResource"
  IngredientAttributes:
    type: object
    properties:
      name:
        type: string
        description: the name of the ingredient
        example: Sausage
      ingredientType:
        type: string
        description: the type of the ingredient
        enum: [meat, vegetable, fruit, other]
        example: meat
  IngredientResource:
    properties:
      type: &ingredientType
        type: string
        description: the type of the resource (ingredient)
        example: ingredient
      id: &ingredientId
        type: string
        description: a unique ID of an ingredient
        example: abc123
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        $ref: "#/definitions/IngredientAttributes"
      relationships: &ingredientRelationships
        properties:
          pizzas:
            description: the pizzas associated with this ingredient
            properties:
              links:
                $ref: "#/definitions/SelfLink"
              data:
                type: array
                description: a list of relationship resources with the pizza type
                items:
                  $ref: "#/definitions/RelationshipResource"
      included: &ingredientIncluded
        type: array
        items:
          $ref: "#/definitions/PizzaResource"
  IngredientPostBody:
    properties:
      type: *ingredientType
      id: *ingredientId
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        $ref: "#/definitions/IngredientAttributes"
      relationships: *ingredientRelationships
  DoughResult:
    properties:
      data:
        $ref: "#/definitions/DoughRecipe"
  DoughsResult:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/DoughRecipe"
  DoughRecipe:
    properties:
      type: &doughType
        type: string
        description: the type of the resource (dough)
        example: dough
      id: &doughId
        type: string
        description: a unique ID of a dough recipe
        example: abc123
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        $ref: "#/definitions/DoughAttributes"
      relationships: &doughRelationships
        properties:
          pizzas:
            description: the pizzas associated with this dough
            properties:
              links:
                $ref: "#/definitions/SelfLink"
              data:
                type: array
                description: a list of relationship resources with the pizza type
                items:
                  $ref: "#/definitions/RelationshipResource"
      included: &doughIncluded
        type: array
        items:
          $ref: "#/definitions/PizzaResource"
  DoughPostBody:
    properties:
      type: *doughType
      id: *doughId
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        $ref: "#/definitions/DoughAttributes"
      relationships: *doughRelationships
  DoughAttributes:
    type: object
    properties:
      name:
        type: string
        description: the name of the dough recipe
        example: weeknight pizza dough
      gramsFlour:
        type: integer
        description: the amount of flour used, in grams
        example: 500
      flourType:
        type: string
        description: the name of the kind of flour used
        example: All Purpose
      gramsWater:
        type: integer
        description: the amount of water used, in grams
        example: 400
      waterTemp:
        type: integer
        description: the temperature in Fahrenheit to heat the water to
        example: 90
      gramsYeast:
        type: integer
        description: the amount of yeast to use, in grams
        example: 5
      gramsSalt:
        type: integer
        description: the amount of salt to use, in grams
        example: 15
      gramsSugar:
        type: integer
        description: the amount of sugar to use, in grams
        example: 20
      gramsOliveOil:
        type: integer
        description: the amount of olive oil to use, in grams
        example: 50
      bulkFermentTime:
        type: integer
        description: the time in minutes to spend on the bulk ferment
        example: 60
      proofTime:
        type: integer
        description: the time in minutes to spend on the proof
        example: 15
      specialInstructions:
        type: string
        description: any additional instructions not captured in the main object
        example: keep the dough in the fridge during the bulk ferment
  ErrorResult:
    properties:
      errors:
        type: array
        items:
          $ref: "#/definitions/ErrorObject"
  ErrorObject:
    properties:
      status:
        type: string
        description: HTTP status code
        example: "123"
      title:
        type: string
        description: A short, user readable summary of the error
        example: Not Found
      code:
        type: string
        description: An application-specific error code
        example: "1234"
      detail:
        type: string
        description: A long description of the error that may contain instance-specific details
        example: A long description of the error that may contain instance-specific details
      links:
        properties:
          about:
            type: string
            format: uri
            description: A link to further information about the error
            example: https://developer.oregonstate.edu/documentation/error-reference#1234
  SelfLink:
    properties:
      self:
        type: string
        format: url
        description: Self link of resource
  RelationshipResource:
    description: an resource passed to a /relationships endpoint with only a type and ID
    properties:
      type:
        type: string
        description: the type of the request (pizza, dough, ingredient)
        example: (dough|ingredient|pizza)
      id:
        type: string
        description: the unique ID of the resource
        example: abc123
  RelationshipResourceResponse:
    description: a response for a relationships endpoint for a -to-one relationship
    properties:
      data:
        type: object
        $ref: "#/definitions/RelationshipResource"
  RelationshipResourceList:
    description: a list of relationship resources
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RelationshipResource"
parameters:
  pizzaId:
    in: path
    name: pizzaId
    required: true
    type: string
    description: ID of pizza to retrieve
responses:
  "400":
    description: Incorrect syntax in request, or required fields missing
    schema:
      $ref: "#/definitions/ErrorResult"
  "404":
    description: Resource not found
    schema:
      $ref: "#/definitions/ErrorResult"
  "409":
    description: Type is invalid
    schema:
      $ref: "#/definitions/ErrorResult"
  "500":
    description: Internal server error
    schema:
      $ref: "#/definitions/ErrorResult"
